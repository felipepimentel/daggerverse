name: Reusable MkDocs Workflow

# Only allow this workflow to be called by other workflows
on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.11'
      source_dir:
        description: 'Directory containing mkdocs.yml and docs/'
        required: false
        type: string
        default: '.'
      requirements_file:
        description: 'Path to custom requirements.txt file'
        required: false
        type: string
        default: ''
      base_url:
        description: 'Base URL for the documentation'
        required: false
        type: string
        default: ''
      strict_mode:
        description: 'Enable strict mode for MkDocs build'
        required: false
        type: boolean
        default: true
      minify:
        description: 'Enable HTML minification'
        required: false
        type: boolean
        default: true
      git_revision_date:
        description: 'Include git revision date'
        required: false
        type: boolean
        default: true
      environment:
        description: 'GitHub environment to deploy to'
        required: false
        type: string
        default: 'github-pages'
    secrets:
      token:
        description: 'GitHub token for deployment'
        required: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dagger CLI
        uses: dagger/dagger-for-github@v5
        with:
          version: "0.15.2"

      - name: Validate MkDocs Configuration
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          # Validate mkdocs.yml exists
          if [ ! -f "${{ inputs.source_dir }}/mkdocs.yml" ]; then
            echo "Error: mkdocs.yml not found in ${{ inputs.source_dir }}"
            exit 1
          fi

          # Validate docs directory exists
          if [ ! -d "${{ inputs.source_dir }}/docs" ]; then
            echo "Error: docs directory not found in ${{ inputs.source_dir }}"
            exit 1
          fi

      - name: Build and Deploy Documentation
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          # Create Dagger configuration
          cat << EOF > config.json
          {
            "source": "${{ inputs.source_dir }}",
            "pythonVersion": "${{ inputs.python_version }}",
            "baseURL": "${{ inputs.base_url }}",
            "strict": ${{ inputs.strict_mode }},
            "minify": ${{ inputs.minify }},
            "gitRevisionDate": ${{ inputs.git_revision_date }}
            $([ -n "${{ inputs.requirements_file }}" ] && echo ", \"requirementsFile\": \"${{ inputs.requirements_file }}\"")
          }
          EOF

          # Build documentation using Dagger
          dagger call --progress=plain \
            --source "${{ inputs.source_dir }}" \
            build \
            --config config.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.token }} 