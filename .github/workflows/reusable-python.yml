name: Python CI Pipeline

on:
  workflow_call:
    inputs:
      source-path:
        description: "Source code path"
        default: "."
        required: false
        type: string
      dagger_version:
        description: "Dagger version to use"
        default: "0.9.8"
        required: false
        type: string
      run_tests:
        description: "Whether to run unit tests"
        default: true
        required: false
        type: boolean
      run_lint:
        description: "Whether to run linting checks"
        default: true
        required: false
        type: boolean
      publish_pypi:
        description: "Whether to publish to PyPI"
        default: true
        required: false
        type: boolean
      build_container:
        description: "Whether to build container"
        default: false
        required: false
        type: boolean
      python_version:
        description: "Python version to use"
        default: "3.12-alpine"
        required: false
        type: string
    secrets:
      PYPI_TOKEN:
        description: "PyPI token for publishing"
        required: false
      DOCKER_USERNAME:
        description: "Docker Hub username"
        required: false
      DOCKER_PASSWORD:
        description: "Docker Hub password"
        required: false

permissions:
  contents: write
  id-token: write
  issues: write
  pull-requests: write
  packages: write
  statuses: write
  actions: read

jobs:
  pipeline:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Run Python Pipeline
        uses: dagger/dagger-for-github@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          verb: call
          module: github.com/felipepimentel/daggerverse/pipelines/python@main
          args: >-
            ${{ inputs.publish_pypi && 'publish' || 'test' }}
            --source ${{ inputs.source-path }}
            --python-version ${{ inputs.python_version }}
            ${{ inputs.publish_pypi && format('--token=env:PYPI_TOKEN') || '' }}
            ${{ inputs.build_container && secrets.DOCKER_USERNAME && format('--docker-username=env:DOCKER_USERNAME') || '' }}
            ${{ inputs.build_container && secrets.DOCKER_PASSWORD && format('--docker-password=env:DOCKER_PASSWORD') || '' }}
            ${{ inputs.run_tests && '--run-tests' || '--skip-tests' }}
            ${{ inputs.run_lint && '--run-lint' || '--skip-lint' }}
          version: ${{ inputs.dagger_version }}
